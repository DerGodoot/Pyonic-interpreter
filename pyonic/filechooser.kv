
<FileLabel>:
    orientation: 'horizontal'
    on_filename: self.selected = False
    canvas.before:
        Color:
            rgba: (0.7, 0.7, 1, 1) if root.state == 'down' else (0.8, 0.8, 1, 1) if root.selected else (0.95, 0.95, 0.95, 1) if root.shade else (1, 1, 1, 1)
        Rectangle:
            pos: self.pos
            size: self.size
    Label:
        text: {'folder': 'F', 'file': 'd'}[root.file_type]
        font_size: sp(20)
        size_hint_x: None
        width: dp(40)
        text_size: self.size
        halign: 'center'
        valign: 'middle'
        # color: (0, 0, 1, 1) if root.file_type == 'folder' else (0, 1, 0, 1)
        color: (0.3, 0.3, 0.3, 1)
        font_name: 'assets/fontello.ttf'
    Widget:
        size_hint_x: None
        width: sp(5)
    Label:
        text: root.filename if not root.selected else '[b]{}[/b]'.format(root.filename)
        markup: root.selected
        text_size: self.size
        halign: 'left'
        valign: 'middle'
        

<FileView>:
    viewclass: 'FileLabel'
    scroll_timeout: 30
    scroll_distance: dp(3)
    RecycleBoxLayout:
        default_size: None, dp(sp(35))
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'


<PyonicFileChooser>:
    orientation: 'vertical'
    current_selection: fileview.selection_filename
    Label:
        height: sp(40)
        size_hint_y: None
        text: 'CUR: ' + fileview.folder
    Label:
        height: sp(40)
        size_hint_y: None
        text: 'SEL: ' + root.current_selection
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: dp(40)
        Label:
            text: '.py files only'
        CheckBox:
            id: py_only
            active: False
    AnchorLayout:
        id: al
        FileView:
            id: fileview
            size_hint: None, None
            width: int(0.98 * al.width)
            height: int(0.98 * al.height)
            folder: root.folder
            python_only: py_only.active
            canvas.before:
                Color:
                    rgba: (0.95, 0.95, 0.95, 1)
                Rectangle:
                    pos: self.pos
                    size: self.size
            canvas.after:
                Color:
                    rgba: 0, 0, 0, 1
                Line:
                    points: self.x, self.y, self.x + self.width, self.y, self.x + self.width, self.y + self.height, self.x, self.y + self.height, self.x, self.y
                    width: 2
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: sp(40)
        ColouredButton:
            text: 'cancel'
            background_normal: 1.0, 0.8, 0.8, 1
            background_down: 0.5, 0.5, 0.5, 1
            radius: dp(5)
            color: (1, 1, 1, 1) if self.state == 'down' else (0, 0, 0, 1)
        ColouredButton:
            text: 'open'
            background_normal: (0.8, 1.0, 0.8, 1) if fileview.selection_filename else (0.4, 0.4, 0.4, 1)
            background_down: 0.5, 0.5, 0.5, 1
            radius: dp(5)
            color: (1, 1, 1, 1) if self.state == 'down' else (0, 0, 0, 1)

<FileChooserScreen>:
    name: 'filechooser'
    BoxLayout:
        orientation: 'vertical'
        PyonicFileChooser:
            